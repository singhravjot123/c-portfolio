Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:
Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]

Example 2:

Input: numRows = 1
Output: [[1]]

 

Constraints:

    1 <= numRows <= 30

//Solution

class Solution {
    public List<Integer> generaterow(int row){
        List<Integer>curr=new ArrayList<>();
        long res=1;
        curr.add(1);
        for(int col=1;col<row;col++){
            res=res*(row-col);
            res=res/col;
            curr.add((int)res);
        }
        return curr;

    }
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans=new ArrayList<>();
        for(int i=1;i<=numRows;i++){
            ans.add(generaterow(i));
        }
        return ans;
    }
}

